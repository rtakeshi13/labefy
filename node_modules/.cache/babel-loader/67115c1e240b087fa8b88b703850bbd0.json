{"ast":null,"code":"var _jsxFileName = \"/home/renan/labefy/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PlaylistSidebar from \"./components/PlaylistSidebar/PlaylistSidebar\";\nimport MusicList from \"./components/MusicList/MusicList\";\nimport { MainContainer, Header } from \"./styled\";\nimport qs from \"querystring\";\nconst urlTokenSpotify = \"https://accounts.spotify.com/api/token\";\nconst bodySpotify = {\n  grant_type: \"client_credentials\"\n};\nconst headersTokenSpotify = {\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  },\n  auth: {\n    username: \"73f01c670ed349f399db684c6a0a3e05\",\n    password: \"dad56bdf9ebb40958fab09f06c10acb1\"\n  }\n};\nconst url = \"https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists\";\nconst headers = {\n  headers: {\n    Authorization: \"renan-takeshi-mello\"\n  }\n};\n\nfunction App() {\n  const [playlists, setPlaylists] = useState();\n  const [playlistId, setPlaylistId] = useState();\n  const [playlistName, setPlaylistName] = useState();\n  const [tracks, setTracks] = useState();\n  const [token, setToken] = useState();\n\n  async function getSpotifyToken() {\n    try {\n      const response = await axios.post(urlTokenSpotify, qs.stringify(bodySpotify), headersTokenSpotify);\n      setToken(response.data.access_token);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getSpotifyToken();\n  }, []);\n\n  async function getAllPlaylists() {\n    try {\n      const response = await axios.get(url, headers);\n      setPlaylists(response.data.result.list);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getAllPlaylists();\n  }, []);\n\n  async function getPlaylistTracks(id, name) {\n    try {\n      const response = await axios.get(url + `/${id}/tracks`, headers);\n      setTracks(response.data.result.tracks);\n      setPlaylistId(id);\n      setPlaylistName(name);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function deletePlaylist(id) {\n    if (window.confirm(\"Deseja mesmo deletar a playlist ?\")) {\n      try {\n        await axios.delete(url + `/${id}`, headers);\n        id === playlistId && setTracks(); // Checa se a playlist excluida estava selecionada\n\n        getAllPlaylists();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function createPlaylist(name) {\n    try {\n      await axios.post(url, {\n        name: name\n      }, headers);\n      getAllPlaylists();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function addTrackToPlaylist(body) {\n    try {\n      await axios.post(url + `/${playlistId}/tracks`, body, headers);\n      getPlaylistTracks(playlistId, playlistName);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeTrackFromPlaylist(trackId) {\n    if (window.confirm(\"Deseja mesmo deletar a faixa ?\")) {\n      try {\n        await axios.delete(url + `/${playlistId}/tracks/${trackId}`, headers);\n        getPlaylistTracks(playlistId, playlistName);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlaylistSidebar, {\n    playlists: playlists,\n    getTracks: getPlaylistTracks,\n    delPlaylist: deletePlaylist,\n    postPlaylist: createPlaylist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), tracks ? /*#__PURE__*/React.createElement(MusicList, {\n    playlistName: playlistName,\n    tracks: tracks,\n    postTrack: addTrackToPlaylist,\n    delTrack: removeTrackFromPlaylist,\n    token: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Selecione uma playlist\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/renan/labefy/src/App.js"],"names":["React","useState","useEffect","axios","PlaylistSidebar","MusicList","MainContainer","Header","qs","urlTokenSpotify","bodySpotify","grant_type","headersTokenSpotify","headers","Accept","auth","username","password","url","Authorization","App","playlists","setPlaylists","playlistId","setPlaylistId","playlistName","setPlaylistName","tracks","setTracks","token","setToken","getSpotifyToken","response","post","stringify","data","access_token","err","console","log","getAllPlaylists","get","result","list","getPlaylistTracks","id","name","deletePlaylist","window","confirm","delete","createPlaylist","addTrackToPlaylist","body","removeTrackFromPlaylist","trackId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PlaylistSidebar from \"./components/PlaylistSidebar/PlaylistSidebar\";\nimport MusicList from \"./components/MusicList/MusicList\";\nimport { MainContainer, Header } from \"./styled\";\nimport qs from \"querystring\";\n\nconst urlTokenSpotify = \"https://accounts.spotify.com/api/token\";\nconst bodySpotify = { grant_type: \"client_credentials\" };\nconst headersTokenSpotify = {\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n  },\n  auth: {\n    username: \"73f01c670ed349f399db684c6a0a3e05\",\n    password: \"dad56bdf9ebb40958fab09f06c10acb1\",\n  },\n};\n\nconst url =\n  \"https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists\";\n\nconst headers = { headers: { Authorization: \"renan-takeshi-mello\" } };\n\nfunction App() {\n  const [playlists, setPlaylists] = useState();\n  const [playlistId, setPlaylistId] = useState();\n  const [playlistName, setPlaylistName] = useState();\n  const [tracks, setTracks] = useState();\n  const [token, setToken] = useState();\n\n  async function getSpotifyToken() {\n    try {\n      const response = await axios.post(\n        urlTokenSpotify,\n        qs.stringify(bodySpotify),\n        headersTokenSpotify\n      );\n      setToken(response.data.access_token);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  useEffect(() => {\n    getSpotifyToken();\n  }, []);\n\n  async function getAllPlaylists() {\n    try {\n      const response = await axios.get(url, headers);\n      setPlaylists(response.data.result.list);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  useEffect(() => {\n    getAllPlaylists();\n  }, []);\n\n  async function getPlaylistTracks(id, name) {\n    try {\n      const response = await axios.get(url + `/${id}/tracks`, headers);\n      setTracks(response.data.result.tracks);\n      setPlaylistId(id);\n      setPlaylistName(name);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function deletePlaylist(id) {\n    if (window.confirm(\"Deseja mesmo deletar a playlist ?\")) {\n      try {\n        await axios.delete(url + `/${id}`, headers);\n        id === playlistId && setTracks(); // Checa se a playlist excluida estava selecionada\n        getAllPlaylists();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function createPlaylist(name) {\n    try {\n      await axios.post(url, { name: name }, headers);\n      getAllPlaylists();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function addTrackToPlaylist(body) {\n    try {\n      await axios.post(url + `/${playlistId}/tracks`, body, headers);\n      getPlaylistTracks(playlistId, playlistName);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeTrackFromPlaylist(trackId) {\n    if (window.confirm(\"Deseja mesmo deletar a faixa ?\")) {\n      try {\n        await axios.delete(url + `/${playlistId}/tracks/${trackId}`, headers);\n        getPlaylistTracks(playlistId, playlistName);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  return (\n    <MainContainer>\n      <PlaylistSidebar\n        playlists={playlists}\n        getTracks={getPlaylistTracks}\n        delPlaylist={deletePlaylist}\n        postPlaylist={createPlaylist}\n      />\n      {tracks ? (\n        <MusicList\n          playlistName={playlistName}\n          tracks={tracks}\n          postTrack={addTrackToPlaylist}\n          delTrack={removeTrackFromPlaylist}\n          token={token}\n        />\n      ) : (\n        <Header>Selecione uma playlist</Header>\n      )}\n    </MainContainer>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}