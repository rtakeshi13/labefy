{"ast":null,"code":"var _jsxFileName = \"/home/renan/labefy/src/components/MusicList/MusicList.js\";\nimport React, { useState } from \"react\";\nimport { MainContainer, Header, InputGrid, Audio, Track, Song, Artist, Table, Control, Remove } from \"./styled\";\nimport SpotifySearch from \"../SpotifySearch/SpotifySearch\";\nimport Iframe from \"react-iframe\";\n\nfunction MusicList(props) {\n  const {\n    playlistName,\n    tracks,\n    postTrack,\n    delTrack,\n    token\n  } = props;\n  const [nameInput, setName] = useState(\"\");\n  const [artistInput, setArtist] = useState(\"\");\n  const [urlInput, setUrl] = useState(\"\");\n\n  function addTrack() {\n    const trackUrl = `http://spoti4.future4.com.br/${Math.ceil(Math.random() * 100)}.mp3`;\n    const body = {\n      name: nameInput,\n      artist: artistInput,\n      url: trackUrl\n    };\n    postTrack(body);\n    setName(\"\");\n    setArtist(\"\");\n    setUrl(\"\");\n  }\n\n  const renderedTracks = tracks && /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"colgroup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Song, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Artist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Control, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Remove, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"M\\xFAsica\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Artista\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, tracks.map(track => {\n    return /*#__PURE__*/React.createElement(Track, {\n      key: track.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        wordWrap: \"break-word\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, track.name), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        wordWrap: \"break-word\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, track.artist), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, track.url.toLowerCase().includes(\"spotify\") ? /*#__PURE__*/React.createElement(Iframe, {\n      url: track.url.replace(/track/g, \"embed/track\"),\n      width: \"250px\",\n      height: \"80px\",\n      frameborder: \"0\",\n      allowtransparency: \"true\",\n      allow: \"encrypted-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(Audio, {\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: track.url,\n      type: \"audio/mpeg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        cursor: \"pointer\",\n        color: \"red\"\n      },\n      onClick: () => {\n        delTrack(track.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"Remover\"));\n  })));\n  return /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, playlistName), /*#__PURE__*/React.createElement(InputGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontSize: \"16px\"\n    },\n    placeholder: \"Name\",\n    value: nameInput,\n    onChange: e => {\n      setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontSize: \"16px\"\n    },\n    placeholder: \"Artist\",\n    value: artistInput,\n    onChange: e => {\n      setArtist(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontSize: \"16px\"\n    },\n    placeholder: \"Url\",\n    value: urlInput,\n    onChange: e => {\n      setUrl(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTrack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Adicionar\")), renderedTracks, /*#__PURE__*/React.createElement(SpotifySearch, {\n    token: token,\n    postTrack: postTrack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MusicList;","map":{"version":3,"sources":["/home/renan/labefy/src/components/MusicList/MusicList.js"],"names":["React","useState","MainContainer","Header","InputGrid","Audio","Track","Song","Artist","Table","Control","Remove","SpotifySearch","Iframe","MusicList","props","playlistName","tracks","postTrack","delTrack","token","nameInput","setName","artistInput","setArtist","urlInput","setUrl","addTrack","trackUrl","Math","ceil","random","body","name","artist","url","renderedTracks","map","track","id","wordWrap","toLowerCase","includes","replace","cursor","color","fontSize","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  MainContainer,\n  Header,\n  InputGrid,\n  Audio,\n  Track,\n  Song,\n  Artist,\n  Table,\n  Control,\n  Remove,\n} from \"./styled\";\nimport SpotifySearch from \"../SpotifySearch/SpotifySearch\";\nimport Iframe from \"react-iframe\";\n\nfunction MusicList(props) {\n  const { playlistName, tracks, postTrack, delTrack, token } = props;\n  const [nameInput, setName] = useState(\"\");\n  const [artistInput, setArtist] = useState(\"\");\n  const [urlInput, setUrl] = useState(\"\");\n\n  function addTrack() {\n    const trackUrl = `http://spoti4.future4.com.br/${Math.ceil(\n      Math.random() * 100\n    )}.mp3`;\n    const body = {\n      name: nameInput,\n      artist: artistInput,\n      url: trackUrl,\n    };\n    postTrack(body);\n    setName(\"\");\n    setArtist(\"\");\n    setUrl(\"\");\n  }\n\n  const renderedTracks = tracks && (\n    <Table>\n      <colgroup>\n        <Song />\n        <Artist />\n        <Control />\n        <Remove />\n      </colgroup>\n      <thead>\n        <tr>\n          <th>Música</th>\n          <th>Artista</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tracks.map((track) => {\n          return (\n            <Track key={track.id}>\n              <td style={{ wordWrap: \"break-word\" }}>{track.name}</td>\n              <td style={{ wordWrap: \"break-word\" }}>{track.artist}</td>\n              <td>\n                {track.url.toLowerCase().includes(\"spotify\") ? (\n                  <Iframe\n                    url={track.url.replace(/track/g, \"embed/track\")}\n                    width=\"250px\"\n                    height=\"80px\"\n                    frameborder=\"0\"\n                    allowtransparency=\"true\"\n                    allow=\"encrypted-media\"\n                  />\n                ) : (\n                  <Audio controls>\n                    <source src={track.url} type=\"audio/mpeg\" />\n                  </Audio>\n                )}\n              </td>\n              <td\n                style={{ cursor: \"pointer\", color: \"red\" }}\n                onClick={() => {\n                  delTrack(track.id);\n                }}\n              >\n                Remover\n              </td>\n            </Track>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n\n  return (\n    <MainContainer>\n      <Header>{playlistName}</Header>\n      <InputGrid>\n        <input\n          style={{ fontSize: \"16px\" }}\n          placeholder=\"Name\"\n          value={nameInput}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <input\n          style={{ fontSize: \"16px\" }}\n          placeholder=\"Artist\"\n          value={artistInput}\n          onChange={(e) => {\n            setArtist(e.target.value);\n          }}\n        />\n        <input\n          style={{ fontSize: \"16px\" }}\n          placeholder=\"Url\"\n          value={urlInput}\n          onChange={(e) => {\n            setUrl(e.target.value);\n          }}\n        />\n        <button onClick={addTrack}>Adicionar</button>\n      </InputGrid>\n      {renderedTracks}\n      <SpotifySearch token={token} postTrack={postTrack} />\n    </MainContainer>\n  );\n}\n\nexport default MusicList;\n"]},"metadata":{},"sourceType":"module"}